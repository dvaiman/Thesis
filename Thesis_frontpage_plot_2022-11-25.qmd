---
title: "Thesis_frontpage_plot"
format: html
editor: visual
---

```{r}
library(tidyverse)
library(ggraph)
library(tidygraph)
library(geomtextpath)
```

```{r}

df_sl_pat_dor2 <- read_csv("../../../Paper 4/data/hpb1_sl_pat_dor_2021-11-32.csv", 
                           locale = readr::locale(encoding = "UTF-8"))

# hpb <- read_csv("../../../Other_R_projects/HPI/Data/data2020/rensad data 2020_scb_dor_patreg_fk/data/hbt_scb_cleaned_data_all_longformat_2021-05-21.csv",                            locale = readr::locale(encoding = "UTF-8"))

# names of ssyk at 2 level
ssyk_names <- readxl::read_xlsx(here::here("data", "ssyk2levelcodes_english.xlsx") ) |> 
    mutate(Name = str_remove_all(Name, "Occupations requiring higher education qualification or equivalent in|Occupations requiring advanced academic competence in|Occupations requiring advanced academic skills in|Occupations requiring higher education qualification or the equivalent in|(ict)|, etc")) %>%
  mutate(Name = str_trim(Name),
         Name = str_to_sentence(Name)
         )
```

# set theme

```{r}

# color of thesis
"#80afcd"

theme_set(theme_classic()) #set the theme to classic

theme_update( #update the theme
    text = element_text(
        family = "Lora"), #set the font to Lora
    plot.background = element_rect(fill = "transparent", color = "transparent"), #set the background color to #80afcd
    panel.background = element_rect(fill = "transparent", color = "transparent"), #set the background color to #80afcd
    panel.grid = element_blank(), #remove the grid
    axis.title = element_blank(), #remove the axis title
    axis.text.x = element_blank(), #remove the x axis text
    axis.text.y = element_blank(), #remove the y axis text
    axis.line = element_blank(), #remove the axis line
    axis.ticks = element_blank() #remove the axis ticks
  )


```

# Aggregating and summarizing data for plotting

```{r}
df <- df_sl_pat_dor2 |>  
  mutate(sex = if_else(Gender == "Female",1,0),
        # TobaccoSmoking_cat = if_else(TobaccoSmoking > 2,1,0),
         obesity=if_else(BMI>=30, 1,0),
         overweight=if_else(BMI>=25, 1,0),
         lowcrf=if_else(Astrand_rel_VO2<32, 1,0),
         pws = if_else(PhysicalWorkSituation == "Stillasittande med inslag av rörligt arbete" | PhysicalWorkSituation == "Rörligt arbete",0,1)) |> 
  group_by(Ssyk2_hpi_scb_combined, 
           Ssyk12_hpi_scb_combined,
           Ssyk_hpi_scb_wb_hl,
           Ssyk1_hpi_scb_combined,
          # Ssyk12_name
           ) |> 
  summarise(maxBMI = max(BMI, na.rm=TRUE), minBMI = min(BMI, na.rm=TRUE), BMI = mean(BMI, na.rm=TRUE), obesity = mean(obesity, na.rm=TRUE)*100,overweight = mean(overweight, na.rm=TRUE)*100,
            maxCRF = max(Astrand_rel_VO2, na.rm=TRUE), minCRF = min(Astrand_rel_VO2), CRF = mean(Astrand_rel_VO2, na.rm=TRUE), lowcrf = mean(lowcrf, na.rm=TRUE)*100,
            maxAge = max(Age, na.rm=TRUE), minAge = min(Age, na.rm=TRUE), Age = mean(Age, na.rm=TRUE),
            smoking = mean(TobaccoSmoking_cat, na.rm=TRUE)*100,
            pws = mean(pws, na.rm=TRUE)*100,
          #  smoking = if_else(TobaccoSmoking)
            sex = mean(sex, na.rm=TRUE)*100,
            n = n()) |> 
  mutate(
# ssyk1_name = case_when(
#    Ssyk1_hpi_scb_combined == 2 ~ "2 Professionals",
#                   Ssyk1_hpi_scb_combined == 8 ~ "8 Transport and mechanical manufacturing",
#                   TRUE ~ Ssyk12_name),
   ssyk2_label = Ssyk2_hpi_scb_combined
   
   )



  # data for aggregating segments
  ocdat = 
    data.frame(
    x = c(.5, 21.5, 31.5, 41.5),
    # for labels postion
    x2 = c(7, 23, 32.5, 42.5),
    xend = c(20.5,30.5,40.5,50.5),
    y =    rep(88,4), 
    yend = rep(88,4), 
    label = c("White-collar high-skilled", 
              "White-collar low-skilled", 
              "Blue-collar high-skilled", 
              "Blue-collar low-skilled"),
    y2 = rep(78,4), 
    yend2 = rep(78,4) 
  ) |> 
    left_join(
      df_sl_pat_dor2 |> 
        mutate(sex = if_else(Gender == "Female",1,0),
               education = SUN2000Niva_Old <= 4, 1,0) |> 
        group_by(Ssyk_hpi_scb_wb_hl) |> 
        summarise(sex = mean(sex),
                  education = mean(education)),
      by = c("label" = "Ssyk_hpi_scb_wb_hl")
      ) |> 
    mutate(diff = xend-x,
           diff_attributed_to_women = diff*sex,
           xend2_sex = x+diff_attributed_to_women,
           diff_attributed_to_education = diff*education,
           xend2_edu = x+diff_attributed_to_education)
  
   # data for  segments
  ocdat9 = 
    data.frame(
    x = c(.5, 8.5, 15.5, 21.5, 26.5, 31.5, 34.5, 41.5, 45.5),
    xend = c(7.5, 14.5, 20.5, 25.5 ,30.5 ,33.5, 40.5, 44.5, 50.5),
    y =    rep(68,9), 
    yend = rep(68,9), 
    Ssyk1_hpi_scb_combined = seq(1,9),
    y2 = rep(58,9), 
    yend2 = rep(58,9) 
  ) |> 
    left_join(
      df_sl_pat_dor2 |> 
        mutate(sex = if_else(Gender == "Female",1,0),
               education = SUN2000Niva_Old <= 4, 1,0,
               ssyk1_name = case_when(
    Ssyk1_hpi_scb_combined == 2 ~ "2 Professionals",
                   Ssyk1_hpi_scb_combined == 8 ~ "8 Transport and mechanical manufacturing",
                   TRUE ~ Ssyk12_name)) |> 
        group_by(ssyk1_name, Ssyk1_hpi_scb_combined) |> 
        summarise(sex = mean(sex),
                  education = mean(education))#,
    #  by = c("label" = "Ssyk_hpi_scb_wb_hl")
      ) |> 
    mutate(diff = xend-x,
           diff_attributed_to_women = diff*sex,
           xend2_sex = x+diff_attributed_to_women,
           diff_attributed_to_education = diff*education,
           xend2_edu = x+diff_attributed_to_education)
  
  
  # data for aggregating more lines
  df_sl_pat_dor2 |> 
    mutate(sex = if_else(Gender == "Female",1,0)) |> 
    group_by(Ssyk1_hpi_scb_combined) |> 
    summarise(sex = mean(sex)*100) 
  
  seq(1,9)
  df |> 
    group_by(Ssyk1_hpi_scb_combined) |> 
    summarise(sex = mean(sex))
  
  
 labels =  data.frame(
    label = c(" -Physically heavy (%)"," -Smokers (%)", " -Obesity (%)", " -Low fitness (%)", " -Women (%)", " -High education (%)", " -Women (%)", " -High education (%)"),
    yposition = c(-21,-6,10,25,60,70,80,90),
    xposition = rep(-16,8)
  )
  
  
```

seeing imagining acting describing

```{r}
d = data.frame(         x = as.factor(rep(c(18,27,36,45, 55,77,84), times=4)), 
           y = rep(c(10, 30, 50, 60),each=7), 
           label = rep(c("10", "30", "50", "*", "*","",""),each=4)
)




da = data.frame(
  x = rep(0.5,6),
                    xend = rep(50.5,6),
                   y =    c(-50, -30, -10, 10, 30, 50),
                   yend = c(-50, -30, -10, 10, 30, 50)
)
```

# plot

```{r}
# plot

df |> mutate(Ssyk2_hpi_scb_combined = as.numeric(Ssyk2_hpi_scb_combined)) |> 
  # space between bars
  bind_rows(
    data.frame(Ssyk2_hpi_scb_combined = c(18,27,36,45, 55,63, 77, 84),
               lines = as.factor(c(18,27,36,45, 55,63, 77, 84))
    ),
    # where the pacman gap is and gaps between aggregated groups
    data.frame(lines2 = as.factor(c(36, 55, 77, 96)))#,
    #ten = data.frame(y = c(10,30,50), x = as.factor(c(36, 55, 77))           
    ) |>
  mutate(Ssyk2_hpi_scb_combined = as.factor(Ssyk2_hpi_scb_combined)) |> ungroup() |> 
mutate( Ssyk2_color = as.character(rep(1:2, 27))) |> 
  # plot
  ggplot(aes(x=Ssyk2_hpi_scb_combined , y=BMI)) +
#  geom_point(data = ten, aes(x,y)) + 
  geom_point(aes(x=lines2, y=3108), 
             shape = 24,
             size=4,
             #position = position_nudge(0,5)
  ) +
  # making gap in circle
 # geom_point(aes(x=-15,y=4)) +
  # geom_segment(aes(x = lines,
  #                  xend = lines,
  #                  y = 30,
  #                  yend = 110),
  #              linetype = "dotted",
  #           size = 2,
  #              color = "grey20",
  #              arrow = arrow(length = unit(0.015, "npc"))
  #           ) +
# segment for dotted or arrow between bars
  # geom_segment(aes(x = lines2,
  #                  xend = lines2,
  #                  y = 10,
  #                  yend = 90),
  #              linetype = "dotted",
  #           size=1,
  #            color = "gold3",
  #           alpha = 1,
  #          #    arrow = arrow(length = unit(0.015, "npc"))
  # ) +
# gridlines
     geom_segment(
    data = da,
    aes(x =x,
        xend = xend,
        y = y,
        yend = yend),
    color = "grey70",
    size = 0.4,
    linetype = "dotted") +
  
  geom_col(aes(x=Ssyk2_hpi_scb_combined , y=lowcrf), fill="gold3", alpha=1) +
 geom_col(aes(x=Ssyk2_hpi_scb_combined , y=obesity), fill = "grey30") + 
  # geom_col(aes(x=Ssyk2_hpi_scb_combined , y=Age), fill="gold", alpha=0.3) +
#  geom_segment(aes(x=Ssyk2_hpi_scb_combined , y=-smoking*sign(smoking), xend=Ssyk2_hpi_scb_combined, yend=-5), fill="gold4", alpha=0.6) +

   geom_col(aes(x=Ssyk2_hpi_scb_combined , y=-pws*sign(pws)), fill=colorspace::darken("gold3",0), alpha=1) + 
  geom_col(aes(x=Ssyk2_hpi_scb_combined , y=-smoking*sign(smoking)), fill=colorspace::darken("grey30",0), alpha=1) +     



  geomtextpath::geom_textpath(aes(y=98, label = ssyk2_label, color = Ssyk2_color)) +
 # geom_text(aes(x="97",y=115, label = "N"), size=15, family="Roboto") +
 # geom_text(aes(x="55",y=120, label = "Health"),angle=60, size=8, family="Roboto") +
  #scale_x_continuous(breaks = c(13,24, 33,43,53,62,74,82,93),
  #                   labels = c("I","II", "III","VI","V","VI","VII","VIII","XI")
  #                   ) +

  annotate("text", 
           x = rep(max(0,.2),8), 
           y = c(-62,-50, -30, -10,10, 30, 50, 62), 
           label = c("%", "50","30", "10", "10", "30", "50", "%") , 
           color="grey70", 
           size=3 , 
           angle=0, 
           fontface="bold", 
           hjust=.5) +
     # inner horizontal segment
  geom_segment(aes(x = 0.5,
                   xend = 50.5,
                   y = -0,
                   yend = -0),
               size=0.2,
               color = "white") +
  # lines for aggregated occupations (sex)
  geom_segment(
    data = ocdat,
    aes(x =x,
        xend = xend,
        y = y,
        yend = yend),
    color = colorspace::lighten("steelblue",0),
    size = 4) +
  # lines for women in aggregated occupations
  geom_segment(
    data = ocdat,
    aes(x =x,
        xend = xend2_sex,
        y = y,
        yend = yend),
    color = "black",
    size = 4,
    alpha = 0.4) +
  # lines for aggregated occupations (edu)
  geom_segment(
    data = ocdat,
    aes(x =x,
        xend = xend,
        y = y2,
        yend = yend2),
    color = colorspace::lighten("steelblue",0),
    size = 4) +
  # lines for low education in aggregated occupations
  geom_segment(
    data = ocdat,
    aes(x =x,
        xend = xend2_edu,
        y = y2,
        yend = yend2),
    color = "black",
    size = 4,
    alpha = 0.4) +
   # lines for 9 occupations (sex)
  geom_segment(
    data = ocdat9,
    aes(x =x,
        xend = xend,
        y = y,
        yend = yend),
    color = "steelblue",
    size = 4) +
  # lines for women in 9 occupations
  geom_segment(
    data = ocdat9,
    aes(x =x,
        xend = xend2_sex,
        y = y,
        yend = yend),
    color = "black",
    size = 4,
    alpha = 0.4) +
   # lines for 9 occupations (edu)
  geom_segment(
    data = ocdat9,
    aes(x =x,
        xend = xend,
        y = y2,
        yend = yend2),
    color = colorspace::darken("steelblue",0),
    size = 4) +
  # lines for low education in 9 occupations
  geom_segment(
    data = ocdat9,
    aes(x =x,
        xend = xend2_edu,
        y = y2,
        yend = yend2),
    color = "black",
    size = 4,
    alpha = 0.4) +
  # text labels
  geom_text(data = labels, 
                              aes(x=xposition,y=yposition,
                                  label=label),
            hjust=0,
            family = "Lato",
            color = colorspace::darken("steelblue",0.5)) +

 
#  geom_path(data =  data.frame(
#  y = seq(from = -10, to= 0, length.out = 70),
#  x =  seq(from = -10, to= 0, length.out = 70)
  
#) |> 
#  expand.grid() |> 
 # mutate(x1 = x + gen_simplex(x, y) / 2),
#aes(x1,y, group = x))  +
  
  # occupation texts
 # geomtextpath::geom_textpath(data = ocdat9 |> filter(Ssyk1_hpi_scb_combined %% 2 == 1), 
 #                              aes(x=x,y=y+30,
 #                                  label=ssyk1_name),
 #                              vjust = 4,
 #                              hjust = 1) +
 #   geomtextpath::geom_textpath(data = ocdat9 |> filter(Ssyk1_hpi_scb_combined %% 2 == 0), 
 #                              aes(x=x,y=y+30,
 #                                  label=ssyk1_name),
 #                              vjust = 5,
 #                              hjust = 1) +
# geom_text(data = ocdat9, 
#                             aes(x=x,y=y+30,
#                                 label=ssyk1_name),
#                             vjust = 5,
#                             hjust = 0,
#           angle = c(80,30,0,330,290,250,210, 170,130),
#           vjust=0) +
# white collar blue skille labels
 geomtextpath::geom_textpath(data = ocdat,
                             aes(x=x2,y=y,label=label),
                             vjust = 5,
                             hjust = 1,
                            color=colorspace::darken("steelblue",0.5)) +
  
  scale_color_manual(values = c("grey20", "indianred")) +
  guides(color = "none") +
  
  geomtextpath::coord_curvedpolar(clip="off") +
 # ggforce::geom_mark_circle(data = ocdat9, 
 #                             aes(x=x,y=y+30,vjust = 5,
 #                                 group = ssyk1_name,
 #                                 label=ssyk1_name,
 #                                 label.buffer = unit(10, "mm"))) +
 # ggrepel::geom_text_repel(data = ocdat9, 
  #                            aes(x=x,y=y+30,
   #                               label=ssyk1_name)) +
  ylim(-90,120)


ocdat9 |>  view()
```

```{r}
ggsave("fronpageplot2.svg")
#Saving 7.93 x 11.9 in image

#ggsave("fronpageplot.svg")
#Saving 8.3 x 11.9 in image
```

possible colorscale: ggpomodoro

21:30, 31:40, 41

https://www.data-to-viz.com/graph/circularbarplot.html

# Other ideas

https://github.com/z3tt/TidyTuesday/blob/main/R/2020_22_Cocktails.Rmd

# PCA

https://bjnnowak.netlify.app/2021/09/15/r-pca-with-tidyverse/

Plot 1

```{r}
graph <- as_tbl_graph(df_sl_pat_dor2 |> slice_head(n = 1500) |> 
                        select(BMI, LopNr, Ssyk12_name)) %>% 
    mutate(BMI = centrality_degree(mode = 'in'))

graph |> 
ggraph(layout = 'linear', circular = TRUE) + 
    geom_edge_fan(aes(alpha = after_stat(index), color = Ssyk12_name), show.legend = FALSE) +
  geom_node_tile(aes(width = BMI, height = BMI)) +
scale_edge_colour_brewer(
  type = "seq",
  palette = 7,
  direction = 1,
  aesthetics = "edge_colour"
)

```

Plot 2

```{r}
ggraph(graph, 'partition', circular = TRUE) + 
  geom_node_arc_bar(aes(fill = BMI), size = 0.25) + 
  coord_fixed()
```

Treemap

```{r}
ggraph(graph, 'treemap', weight = BMI) + 
  geom_node_tile(aes(fill = BMI), size = 0.25)
```

```{r}

dendrogram <- hclust(dist(df_sl_pat_dor2 |> slice_head(n = 1000) |> select(Ssyk12_hpi_scb_combined, BMI, Astrand_rel_VO2)))


ggraph(dendrogram, 'dendrogram', height = height) + 
  geom_edge_elbow()


ggraph(dendrogram, 'dendrogram', circular = TRUE) + 
  geom_edge_elbow(aes(colour = Ssyk12_hpi_scb_combined)) + 
  coord_fixed()
```

```{r}




graph <- as_tbl_graph(df_sl_pat_dor2 |> slice_head(n = 1000) |> select(BMI, LopNr, Ssyk12_name)) %>% 
    mutate(BMI = centrality_degree(mode = 'in'))
```

```{r}

graph |> 
ggraph(layout = 'linear', circular = TRUE) + 
    geom_edge_fan(aes(alpha = after_stat(index), color = Ssyk12_name), show.legend = FALSE) + 
  geom_node_tile(aes(width = BMI, height = BMI))
    geom_node_point(aes(size = BMI))


  facet_edges(~year) + 
    theme_graph(foreground = 'steelblue', fg_text_colour = 'white')
  
  ggsave(here::here("accidentalart.svg"))
```

```{r}
mtcars |> distinct(mpg, .keep_all = TRUE) |> 
  ggplot(aes(mpg, drat)) +
  
 # geom_polygon() +
  ggvoronoi::geom_voronoi() +
 # ggforce::geom_voronoi_tile() +
geom_point(color = "red") 
```

# table

```{r}
glimpse(df)

t <- df |> 
  ungroup() |> 
  mutate(pop = sum(n),
         Percentage = sprintf("%.2f",round(n/pop,6)*100),
         obesity = round(obesity,0),
         lowcrf = round(lowcrf,0),
         smoking = round(smoking,0),
         sex = round(sex,0)
         ) |>  
  left_join(ssyk_names |> janitor::clean_names(), by =c( "Ssyk2_hpi_scb_combined"="ssyk2_2012")) |> 
    relocate(name, .before = 2) |>
  ungroup() |> 
  select(Ssyk2_hpi_scb_combined,name,n,Percentage,sex, obesity, lowcrf, smoking  )





  # for table
  mutate(#sex = if_else(Gender == "Female",1,0),
         education = SUN2000Niva_Old <= 4, 1,0,
         ssyk1_name = case_when(
           Ssyk1_hpi_scb_combined == 2 ~ "2 Professionals",
           Ssyk1_hpi_scb_combined == 8 ~ "8 Transport and mechanical manufacturing",
           TRUE ~ Ssyk12_name)) |> 
  group_by(ssyk1_name, Ssyk1_hpi_scb_combined) |> 
  summarise(sex2 = mean(sex),
            education2 = mean(education)) |> 
```

```{r}

library(officer)
library(flextable)


# Create a Word document
doc <- read_docx()

# Create a flextable object
ft <- flextable(t) %>%
  set_header_labels(
    Ssyk2_hpi_scb_combined = "SSYK2 level code",
    name = "Occupation",
    n = "Count",
    Percentage = "Percentage",
    sex = "Sex (%)",
    obesity = "Obesity (%)",
    lowcrf = "Low CRF (%)",
    smoking = "Smoking (%)"
    
  ) %>%
  bold(part = "header") %>%
  align(j = 1, align = "left") %>%
  align(j = 2:8, align = "center") %>%
  autofit() %>%
  fontsize(size = 9)

# Add the flextable to the document
doc <- doc %>%
  body_add_flextable(ft)

# Save the document
print(doc, target = "output_table.docx")
```
