---
title: "Thesis_frontpage_plot"
format: html
editor: visual
---

```{r}
library(tidyverse)
library(ggraph)
library(tidygraph)
library(geomtextpath)
```

```{r}

df_sl_pat_dor2 <- read_csv("../../../Paper 4/data/hpb1_sl_pat_dor_2021-11-32.csv", 
                           locale = readr::locale(encoding = "UTF-8"))
```

# set theme

```{r}

theme_set(theme_classic())

theme_update(
    text = element_text(
        family = "Lora"), #Lora
    plot.background = element_rect(fill = "#80afcd", color = "#80afcd"),
    panel.background = element_rect(fill = "#80afcd", color = "#80afcd"),
    panel.grid = element_blank(),
    axis.title = element_blank(),
    axis.text.x = element_blank(),
    axis.text.y = element_blank(),
    axis.line = element_blank(),
    axis.ticks = element_blank()
  )

```

# Aggregating and summarizing data for plotting

```{r}
df <- df_sl_pat_dor2 |> 
  group_by(Ssyk2_hpi_scb_combined, 
           Ssyk12_hpi_scb_combined,
           Ssyk_hpi_scb_wb_hl,
           Ssyk1_hpi_scb_combined,
           Ssyk12_name) |> 
  summarise(maxBMI = max(BMI), minBMI = min(BMI), BMI = mean(BMI),  
            maxCRF = max(Astrand_rel_VO2), minCRF = min(Astrand_rel_VO2), CRF = mean(Astrand_rel_VO2), 
            maxAge = max(Age), minAge = min(Age), Age = mean(Age),
            smoking = mean(TobaccoSmoking),
            n = n()/1000) |> 
  mutate(ssyk1_name = case_when(
    Ssyk1_hpi_scb_combined == 2 ~ "2 Professionals",
                   Ssyk1_hpi_scb_combined == 8 ~ "8 Transport and mechanical manufacturing",
                   TRUE ~ Ssyk12_name)
    )



  # data for aggregating lines
  ocdat = 
    data.frame(
    x = c(1, 22, 32, 42),
    xend = c(20,30,40,50),
    y = c(88, 88, 88, 88),
    yend = c(88, 88, 88, 88),
    label = c("White-collar high-skilled", 
              "White-collar low-skilled", 
              "Blue-collar high-skilled", 
              "Blue-collar low-skilled")
  )
```


```{r}
df |> 
  bind_rows(
    data.frame(Ssyk2_hpi_scb_combined = c(18,27,36,45, 55,63, 77, 84,97),
                       lines = as.factor(c(18,27,36,45, 55,63, 77, 84,97))
               ),
                       data.frame(lines2 = as.factor(c(36, 55, 77,97))
                                         )) |> 
  mutate(Ssyk2_hpi_scb_combined = as.factor(Ssyk2_hpi_scb_combined)) |> 
  ggplot(aes(x=Ssyk2_hpi_scb_combined , y=BMI)) +
  geom_point(aes(x=lines2, y=108), 
             shape = 24,
             size=4,
             #position = position_nudge(0,5)
             ) +
  geom_segment(aes(x = lines,
                   xend = lines,
                   y = 40,
                   yend = 80),
               linetype = "dotted",
               color = "white") +
  geom_segment(aes(x = lines2,
                   xend = lines2,
                   y = 40,
                   yend = 100),
               linetype = "dotted",
               color = "black",
               arrow = arrow(length = unit(0.03, "npc"))
               )+
#  geom_polygon(aes(x=Ssyk2_hpi_scb_combined , y=maxBMI), fill="gold", alpha=0.3) +
 # geom_polygon(aes(x=Ssyk2_hpi_scb_combined , y=maxAge), fill="indianred", alpha=0.3) +
 # geom_col(aes(x=Ssyk2_hpi_scb_combined , y=maxBMI), width = 0.1, fill="black", alpha=0.3) +
  geom_col(aes(x=Ssyk2_hpi_scb_combined , y=BMI)) + 

#  geom_path(aes(x=Ssyk2_hpi_scb_combined , y=Age), color="gold", alpha=0.3) +
#  geom_line(aes(x=Ssyk2_hpi_scb_combined , y=CRF), color="gold", alpha=0.3) +
#  geom_line(aes(x=Ssyk2_hpi_scb_combined , y=BMI), color="gold4", alpha=0.9) +
  geom_col(aes(x=Ssyk2_hpi_scb_combined , y=CRF), fill="gold", alpha=0.3) +
  geom_col(aes(x=Ssyk2_hpi_scb_combined , y=Age), fill="gold", alpha=0.3) +
  geom_col(aes(x=Ssyk2_hpi_scb_combined , y=smoking), fill="gold4", alpha=0.9) +
    # placeholder
  #geom_line(aes(x=Ssyk12_hpi_scb_combined , y=n), color="transparent", fill = "transparent", alpha=0.9) +
  geomtextpath::geom_textpath(aes(y=98, label = Ssyk2_hpi_scb_combined), color = "black") +
  geom_text(aes(x="97",y=115, label = "N"), size=15, family="Roboto") +
  geom_text(aes(x="55",y=120, label = "Health"),angle=60, size=8, family="Roboto") +
  #scale_x_continuous(breaks = c(13,24, 33,43,53,62,74,82,93),
  #                   labels = c("I","II", "III","VI","V","VI","VII","VIII","XI")
  #                   ) +
    annotate("text", 
             x = rep(max(0,.4),4), 
             y = c(10, 30, 50, 70), 
             label = c("10", "30", "50", "70") , 
             color="white", 
             size=3 , 
             angle=0, 
             fontface="bold", 
             hjust=1)+
  # inner horizontal segment
  geom_segment(aes(x = 0,
                   xend = 45,
                   y = -1,
                   yend = -1),
               color = "grey") +
    geom_segment(
      data = ocdat,
      aes(x =x,
                   xend = xend,
                   y = y,
                   yend = yend),
               color = "steelblue",
               size = 5) +
 geomtextpath::geom_textpath(data = ocdat, 
                             aes(x=x,y=y,label=label),
                            vjust = 5,
                             hjust = 1) +
  geomtextpath::coord_curvedpolar(clip="off") +
  ylim(-30,120)
  


```




possible colorscale: ggpomodoro

21:30, 31:40, 41

https://www.data-to-viz.com/graph/circularbarplot.html

# Other ideas

https://github.com/z3tt/TidyTuesday/blob/main/R/2020_22_Cocktails.Rmd

# PCA

https://bjnnowak.netlify.app/2021/09/15/r-pca-with-tidyverse/

Plot 1

```{r}
graph <- as_tbl_graph(df_sl_pat_dor2 |> slice_head(n = 1500) |> 
                        select(BMI, LopNr, Ssyk12_name)) %>% 
    mutate(BMI = centrality_degree(mode = 'in'))

graph |> 
ggraph(layout = 'linear', circular = TRUE) + 
    geom_edge_fan(aes(alpha = after_stat(index), color = Ssyk12_name), show.legend = FALSE) +
  geom_node_tile(aes(width = BMI, height = BMI)) +
scale_edge_colour_brewer(
  type = "seq",
  palette = 7,
  direction = 1,
  aesthetics = "edge_colour"
)

```

Plot 2

```{r}
ggraph(graph, 'partition', circular = TRUE) + 
  geom_node_arc_bar(aes(fill = BMI), size = 0.25) + 
  coord_fixed()
```

Treemap

```{r}
ggraph(graph, 'treemap', weight = BMI) + 
  geom_node_tile(aes(fill = BMI), size = 0.25)
```

```{r}

dendrogram <- hclust(dist(df_sl_pat_dor2 |> slice_head(n = 1000) |> select(Ssyk12_hpi_scb_combined, BMI, Astrand_rel_VO2)))


ggraph(dendrogram, 'dendrogram', height = height) + 
  geom_edge_elbow()


ggraph(dendrogram, 'dendrogram', circular = TRUE) + 
  geom_edge_elbow(aes(colour = Ssyk12_hpi_scb_combined)) + 
  coord_fixed()
```

```{r}




graph <- as_tbl_graph(df_sl_pat_dor2 |> slice_head(n = 1000) |> select(BMI, LopNr, Ssyk12_name)) %>% 
    mutate(BMI = centrality_degree(mode = 'in'))
```

```{r}

graph |> 
ggraph(layout = 'linear', circular = TRUE) + 
    geom_edge_fan(aes(alpha = after_stat(index), color = Ssyk12_name), show.legend = FALSE) + 
  geom_node_tile(aes(width = BMI, height = BMI))
    geom_node_point(aes(size = BMI))


  facet_edges(~year) + 
    theme_graph(foreground = 'steelblue', fg_text_colour = 'white')
  
  ggsave(here::here("accidentalart.svg"))
```
